# EU_poludniowa.Wspolczynnik_Giniego <- Wspolczynnik_Giniego %>% filter(region %in% c('Albania', 'Andorra', 'Bosnia and Herzegovina', 'Croatia', 'Greece',
#                                                                             'Spain', 'North Macedonia', 'Malta', 'Monaco', 'Italy', 'Cyprus', 'Kosovo',
#                                                                             'Montenegro', 'Portugal', 'San Marino', 'Serbia', 'Turkey', 'Vatican'))
#
#
#
# EU_zachodnia.Smiertelnosc_niemowlat <- Smiertelnosc_niemowlat %>% filter(region %in% c('Belgium', 'Netherlands', 'Luxembourg',
#                                                                            'UK', 'Ireland', 'France'))
#
# EU_srodkowa.Smiertelnosc_niemowlat <- Smiertelnosc_niemowlat %>% filter(region %in% c('Austria', 'Czech Republic', 'Germany', 'Hungary',
#                                                                           'Liechtenstein', 'Poland', 'Slovakia', 'Slovenia', 'Switzerland'))
#
# EU_polnocna.Smiertelnosc_niemowlat <- Smiertelnosc_niemowlat %>% filter(region %in% c('Finland', 'Sweden', 'Iceland', 'Norway',
#                                                                           'Denmark' ))
#
# EU_wschodnia.Smiertelnosc_niemowlat <- Smiertelnosc_niemowlat %>% filter(region %in% c('Belarus', 'Bulgaria', 'Estonia', 'Lithuania', 'Latvia', 'Moldova',
#                                                                            'Romania', 'Ukraine' ))
#
# EU_poludniowa.Smiertelnosc_niemowlat <- Smiertelnosc_niemowlat %>% filter(region %in% c('Albania', 'Andorra', 'Bosnia and Herzegovina', 'Croatia', 'Greece',
#                                                                             'Spain', 'North Macedonia', 'Malta', 'Monaco', 'Italy', 'Cyprus', 'Kosovo',
#                                                                             'Montenegro', 'Portugal', 'San Marino', 'Serbia', 'Turkey', 'Vatican'))
#
#
# EU_zachodnia.Wskaznik_HDI <- Wskaznik_HDI %>% filter(region %in% c('Belgium', 'Netherlands', 'Luxembourg',
#                                                                            'UK', 'Ireland', 'France'))
#
# EU_srodkowa.Wskaznik_HDI <- Wskaznik_HDI %>% filter(region %in% c('Austria', 'Czech Republic', 'Germany', 'Hungary',
#                                                                           'Liechtenstein', 'Poland', 'Slovakia', 'Slovenia', 'Switzerland'))
#
# EU_polnocna.Wskaznik_HDI <- Wskaznik_HDI %>% filter(region %in% c('Finland', 'Sweden', 'Iceland', 'Norway',
#                                                                           'Denmark' ))
#
# EU_wschodnia.Wskaznik_HDI <- Wskaznik_HDI %>% filter(region %in% c('Belarus', 'Bulgaria', 'Estonia', 'Lithuania', 'Latvia', 'Moldova',
#                                                                            'Romania', 'Ukraine' ))
#
# EU_poludniowa.Wskaznik_HDI <- Wskaznik_HDI %>% filter(region %in% c('Albania', 'Andorra', 'Bosnia and Herzegovina', 'Croatia', 'Greece',
#                                                                             'Spain', 'North Macedonia', 'Malta', 'Monaco', 'Italy', 'Cyprus', 'Kosovo',
#                                                                             'Montenegro', 'Portugal', 'San Marino', 'Serbia', 'Turkey', 'Vatican'))
# datasets4<-PKB_na_mieszkanca
# datasets4_val <- datasets4[,c(2:ncol(datasets4))]
# ?top_n
# val <- datasets4$rok.2012
# reg <- datasets4$region
# df <- data.frame(reg,val)
# names(df) <- c("region","wartosc")
# top_20 <- top_n(df, 20, df$wartosc)
#
# top_20_ordered <-  top_20[order(top_20$wartosc, decreasing = T),]
# rownames(top_20_ordered) <- 1:nrow(top_20_ordered)
#
#
# col.colors.sp <- ifelse(top_20_ordered$region=='Poland', "gray", "red")
# str(top_20_ordered)
#
# top_20_ordered %>%
#   ggplot( aes(x=region, y=wartosc)) +
#   geom_line( color="grey") +
#   geom_point(shape=21, color="black", fill=col.colors.sp, size=8) +
#   scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
#   theme(axis.text.x = element_text(size = 15)) +
#   theme_bw() +
#   ggtitle("Scatterplot")
# datasets4<-PKB_na_mieszkanca
# datasets4_val <- datasets4[,c(2:ncol(datasets4))]
#
# val <- datasets4$rok.2012
# reg <- datasets4$region
# df <- data.frame(reg,val)
# names(df) <- c("region","wartosc")
#
# #
# library(plotly)
# library(sf)
# library(tidyverse)
# library(rnaturalearth)
# library(RColorBrewer)
# #
# world <- ne_countries(scale = "medium", returnclass = "sf")
# class(world)
# plot(world)
# # #
# europe <- world[world$region_un=="Europe"&world$name!="Russia",]
# # #
#
#
# # #
# europe$name_long <- gsub("United Kingdom", "UK", europe$name_long)
# europe$name_long <- gsub("Republic of Serbia", "Serbia", europe$name_long)
# europe$name_long <- gsub("Macedonia", "North Macedonia", europe$name_long)
#
# europe_df <- europe %>% left_join(df, by=c("name_long" ="region"))
# europe_df <- cbind(europe_df, st_coordinates(st_centroid(europe_df)))
#
# p <- ggplot() +
#   geom_sf(color="black",data=europe_df,aes(fill=wartosc), inherit.aes=F, alpha=0.9) +
#
#   labs(x="Longitude", y="Latitude") +
#   scale_fill_distiller(name = "Wartosc wskaznika", palette = "Greens") +
#   coord_map(xlim = c(-22, 40),  ylim = c(46, 60)) +
#   theme_bw()
#
# # Convert it into plotly
# ggplotly(p)
#================================= BIBLIOTEKI ===============================================================
#library(ggplot2)
library(openxlsx)
library(dplyr)
library(tidyverse)
#library(gridExtra)
#library(data.table)
#============================== IMPORT DANYCH I WSTEPNA OBROBKA ============================================
setwd("C:/Users/mateu/OneDrive/Pulpit/Projekt_in?ynierski/")
Wskaznik_HDI <- read.xlsx("HDI_INDEX_PROJ.xlsx", sheet = 1, skipEmptyRows = FALSE)
PKB_na_mieszkanca <- read.xlsx("GDP_PER_CAPITA_PROJ.xlsx", sheet = 1, skipEmptyRows = FALSE)
Wspolczynnik_Giniego <- read.xlsx("GINI_INDEX_PROJ.xlsx", sheet = 1, skipEmptyRows = FALSE)
Smiertelnosc_niemowlat <- read.xlsx("INFANT_MORTALITY_RATE_PROJ.xlsx", sheet = 1, skipEmptyRows = FALSE)
Ogolne_szczescie <- read.xlsx("HAPPINESS_SCORE_PROJ.xlsx", sheet = 1, skipEmptyRows = FALSE)
# Dla danych "Ogolne_szczescie" jest oddzielny plik R, w kt?rym zosta? utworzony plik Excel - HAPPINESS_SCORE_PROJ.xlsx.
names(Wskaznik_HDI) <- c("region", "rok.2012","rok.2013",
"rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019")
names(PKB_na_mieszkanca) <- c("region", "rok.2010","rok.2011","rok.2012","rok.2013",
"rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019",
"rok.2020","rok.2021")
names(Wspolczynnik_Giniego) <- c("region","rok.2009", "rok.2010","rok.2011","rok.2012","rok.2013",
"rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019",
"rok.2020")
names(Smiertelnosc_niemowlat) <- c("region","rok.2009", "rok.2010","rok.2011","rok.2012","rok.2013",
"rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019")
PKB_na_mieszkanca <- select(PKB_na_mieszkanca,c("region","rok.2012","rok.2013","rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019","rok.2020","rok.2021"))
Wspolczynnik_Giniego <- select(Wspolczynnik_Giniego,c("region","rok.2012","rok.2013","rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019","rok.2020"))
Smiertelnosc_niemowlat <- select(Smiertelnosc_niemowlat,c("region","rok.2012","rok.2013","rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019"))
Wskaznik_HDI$region <- gsub("United Kingdom", "UK", Wskaznik_HDI$region)
PKB_na_mieszkanca$region <- gsub("United Kingdom", "UK", PKB_na_mieszkanca$region)
Wspolczynnik_Giniego$region <- gsub("United Kingdom", "UK", Wspolczynnik_Giniego$region)
Smiertelnosc_niemowlat$region <- gsub("United Kingdom", "UK", Smiertelnosc_niemowlat$region)
Ogolne_szczescie$region <- gsub("United Kingdom", "UK",Ogolne_szczescie$region)
PKB_na_mieszkanca$region <- gsub("Czechia", "Czech Republic", PKB_na_mieszkanca$region)
Wspolczynnik_Giniego$region <- gsub("Czechia", "Czech Republic", Wspolczynnik_Giniego$region)
Smiertelnosc_niemowlat$region <- gsub("Czechia", "Czech Republic", Smiertelnosc_niemowlat$region)
Ogolne_szczescie$region <- gsub("Macedonia", "North Macedonia",Ogolne_szczescie$region)
Wskaznik_HDI$region <- gsub("Bosnia Herzegovina", "Bosnia and Herzegovina", Wskaznik_HDI$region)
Wspolczynnik_Giniego <- Wspolczynnik_Giniego[-37, ]
#Usuwnie niew?asniwych panstw lub panstw z brakami danych
Wskaznik_HDI <- Wskaznik_HDI[-c(3,5,17,30,37), ]
rownames(Wskaznik_HDI) <- 1:nrow(Wskaznik_HDI)
Wskaznik_HDI[,2:9] <- round(Wskaznik_HDI[,2:9], 3)
Smiertelnosc_niemowlat <- Smiertelnosc_niemowlat[-c(38,40,42,43,44,46,47,48), ]
rownames(Smiertelnosc_niemowlat) <- 1:nrow(Smiertelnosc_niemowlat)
Ogolne_szczescie <- Ogolne_szczescie[-c(26,28),]
rownames(Ogolne_szczescie) <- 1:nrow(Ogolne_szczescie)
Ogolne_szczescie[,2:6] <- round(Ogolne_szczescie[,2:6], 3)    # zaokr?glanie wszystkich kolumn do 3 miejsc po przecinku
# Tworze dodatkowa ramke danych dla "Ogolne_szczescie" w celu usprawnienia dzialania wykresow w aplikacji
Ogolne_szczescie_2012_2019 <- Ogolne_szczescie %>%
add_column(
rok.2012 = "NA",   #dodawanie 0 kolumn
rok.2013 = "NA",
rok.2014 = "NA", .after="region")
# Transpozycja zbior?w danych w celu prezentacji danych dla poszczeg?lnych pa?stw
# t_Wskaznik_HDI <- transpose(Wskaznik_HDI)
# colnames(t_Wskaznik_HDI) <- Wskaznik_HDI[,1]
# t_Wskaznik_HDI <- t_Wskaznik_HDI[-1,]
# lata.Wskaznik_HDI <- colnames(Wskaznik_HDI[,2:length(Wskaznik_HDI)])
# t_Wskaznik_HDI <- cbind(lata.Wskaznik_HDI, t_Wskaznik_HDI)
# rownames(t_Wskaznik_HDI) <- 1:nrow(t_Wskaznik_HDI)
# t_Wskaznik_HDI[,2:ncol(t_Wskaznik_HDI)] <- as.numeric(unlist(t_Wskaznik_HDI[,2:ncol(t_Wskaznik_HDI)]))
#
# t_PKB_na_mieszkanca <- transpose(PKB_na_mieszkanca)
# colnames(t_PKB_na_mieszkanca) <- PKB_na_mieszkanca[,1]
# t_PKB_na_mieszkanca <- t_PKB_na_mieszkanca[-1,]
# lata.PKB_na_mieszkanca <- colnames(PKB_na_mieszkanca[,2:length(PKB_na_mieszkanca)])
# t_PKB_na_mieszkanca <- cbind(lata.PKB_na_mieszkanca, t_PKB_na_mieszkanca)
# rownames(t_PKB_na_mieszkanca) <- 1:nrow(t_PKB_na_mieszkanca)
# t_PKB_na_mieszkanca[,2:ncol(t_PKB_na_mieszkanca)] <- as.numeric(unlist(t_PKB_na_mieszkanca[,2:ncol(t_PKB_na_mieszkanca)]))
#
# t_Wspolczynnik_Giniego <- transpose(Wspolczynnik_Giniego)
# colnames(t_Wspolczynnik_Giniego) <- Wspolczynnik_Giniego[,1]
# t_Wspolczynnik_Giniego <- t_Wspolczynnik_Giniego[-1,]
# lata.Wspolczynnik_Giniego <- colnames(Wspolczynnik_Giniego[,2:length(Wspolczynnik_Giniego)])
# t_Wspolczynnik_Giniego <- cbind(lata.Wspolczynnik_Giniego, t_Wspolczynnik_Giniego)
# rownames(t_Wspolczynnik_Giniego) <- 1:nrow(t_Wspolczynnik_Giniego)
# t_Wspolczynnik_Giniego[,2:ncol(t_Wspolczynnik_Giniego)] <- as.numeric(unlist(t_Wspolczynnik_Giniego[,2:ncol(t_Wspolczynnik_Giniego)]))
#
# t_Smiertelnosc_niemowlat <- transpose(Smiertelnosc_niemowlat)
# colnames(t_Smiertelnosc_niemowlat) <- Smiertelnosc_niemowlat[,1]
# t_Smiertelnosc_niemowlat <- t_Smiertelnosc_niemowlat[-1,]
# lata.Smiertelnosc_niemowlat <- colnames(Smiertelnosc_niemowlat[,2:length(Smiertelnosc_niemowlat)])
# t_Smiertelnosc_niemowlat <- cbind(lata.Smiertelnosc_niemowlat, t_Smiertelnosc_niemowlat)
# rownames(t_Smiertelnosc_niemowlat) <- 1:nrow(t_Smiertelnosc_niemowlat)
# t_Smiertelnosc_niemowlat[,2:ncol(t_Smiertelnosc_niemowlat)] <- as.numeric(unlist(t_Smiertelnosc_niemowlat[,2:ncol(t_Smiertelnosc_niemowlat)]))
#
#
# t_Ogolne_szczescie_2012_2019 <- transpose(Ogolne_szczescie_2012_2019)
# colnames(t_Ogolne_szczescie_2012_2019) <- Ogolne_szczescie_2012_2019[,1]
# t_Ogolne_szczescie_2012_2019 <- t_Ogolne_szczescie_2012_2019[-1,]
# lata.Ogolne_szczescie_2012_2019 <- colnames(Ogolne_szczescie_2012_2019[,2:length(Ogolne_szczescie_2012_2019)])
# t_Ogolne_szczescie_2012_2019 <- cbind(lata.Ogolne_szczescie_2012_2019, t_Ogolne_szczescie_2012_2019)
# rownames(t_Ogolne_szczescie_2012_2019) <- 1:nrow(t_Ogolne_szczescie_2012_2019)
# t_Ogolne_szczescie_2012_2019[,2:ncol(t_Ogolne_szczescie_2012_2019)] <- as.numeric(unlist(t_Ogolne_szczescie_2012_2019[,2:ncol(t_Ogolne_szczescie_2012_2019)]))
#
# t_Ogolne_szczescie <- transpose(Ogolne_szczescie)
# colnames(t_Ogolne_szczescie) <- Ogolne_szczescie[,1]
# t_Ogolne_szczescie <- t_Ogolne_szczescie[-1,]
# lata.Ogolne_szczescie <- colnames(Ogolne_szczescie[,2:length(Ogolne_szczescie)])
# t_Ogolne_szczescie <- cbind(lata.Ogolne_szczescie, t_Ogolne_szczescie)
# rownames(t_Ogolne_szczescie) <- 1:nrow(t_Ogolne_szczescie)
# t_Ogolne_szczescie[,2:ncol(t_Ogolne_szczescie)] <- as.numeric(unlist(t_Ogolne_szczescie[,2:ncol(t_Ogolne_szczescie)]))
# EU_data <- select(Wspolczynnik_Giniego,c('region','rok.2018'))
# mapdata <- map_data("world")
# mapdata <- left_join(mapdata,EU_data, by="region")
#
# mapdata1 <- mapdata %>% filter(!is.na(mapdata$rok.2018))
#
# map1 <- ggplot(mapdata1, aes( x=long, y=lat, group=group)) +
#   geom_polygon(aes(fill=rok.2018), color="white") +
#   scale_fill_gradient(name = "wartosc", low = "yellow", high =  "red", na.value = "grey50")
#
# map1
# str(mapdata1)
# EU_zachodnia.Ogolne_szczescie <- Ogolne_szczescie %>% filter(region %in% c('Belgium', 'Netherlands', 'Luxembourg',
#                                                           'UK', 'Ireland', 'France'))
#
# EU_srodkowa.Ogolne_szczescie <- Ogolne_szczescie %>% filter(region %in% c('Austria', 'Czech Republic', 'Germany', 'Hungary',
#                                                           'Liechtenstein', 'Poland', 'Slovakia', 'Slovenia', 'Switzerland'))
#
# EU_polnocna.Ogolne_szczescie <- Ogolne_szczescie %>% filter(region %in% c('Finland', 'Sweden', 'Iceland', 'Norway',
#                                                          'Denmark' ))
#
# EU_wschodnia.Ogolne_szczescie <- Ogolne_szczescie %>% filter(region %in% c('Belarus', 'Bulgaria', 'Estonia', 'Lithuania', 'Latvia', 'Moldova',
#                                                          'Romania', 'Ukraine' ))
#
# EU_poludniowa.Ogolne_szczescie <- Ogolne_szczescie %>% filter(region %in% c('Albania', 'Andorra', 'Bosnia and Herzegovina', 'Croatia', 'Greece',
#                                                                  'Spain', 'North Macedonia', 'Malta', 'Monaco', 'Italy', 'Cyprus', 'Kosovo',
#                                                                  'Montenegro', 'Portugal', 'San Marino', 'Serbia', 'Turkey', 'Vatican'))
#
#
# EU_zachodnia.PKB_na_mieszkanca <- PKB_na_mieszkanca %>% filter(region %in% c('Belgium', 'Netherlands', 'Luxembourg',
#                                                                            'UK', 'Ireland', 'France'))
#
# EU_srodkowa.PKB_na_mieszkanca <- PKB_na_mieszkanca %>% filter(region %in% c('Austria', 'Czech Republic', 'Germany', 'Hungary',
#                                                                           'Liechtenstein', 'Poland', 'Slovakia', 'Slovenia', 'Switzerland'))
#
# EU_polnocna.PKB_na_mieszkanca <- PKB_na_mieszkanca %>% filter(region %in% c('Finland', 'Sweden', 'Iceland', 'Norway',
#                                                                           'Denmark' ))
#
# EU_wschodnia.PKB_na_mieszkanca<- PKB_na_mieszkanca %>% filter(region %in% c('Belarus', 'Bulgaria', 'Estonia', 'Lithuania', 'Latvia', 'Moldova',
#                                                                            'Romania', 'Ukraine' ))
#
# EU_poludniowa.PKB_na_mieszkanca <- PKB_na_mieszkanca %>% filter(region %in% c('Albania', 'Andorra', 'Bosnia and Herzegovina', 'Croatia', 'Greece',
#                                                                             'Spain', 'North Macedonia', 'Malta', 'Monaco', 'Italy', 'Cyprus', 'Kosovo',
#                                                                             'Montenegro', 'Portugal', 'San Marino', 'Serbia', 'Turkey', 'Vatican'))
#
#
#
# EU_zachodnia.Wspolczynnik_Giniego <- Wspolczynnik_Giniego %>% filter(region %in% c('Belgium', 'Netherlands', 'Luxembourg',
#                                                                            'UK', 'Ireland', 'France'))
#
# EU_srodkowa.Wspolczynnik_Giniego <- Wspolczynnik_Giniego %>% filter(region %in% c('Austria', 'Czech Republic', 'Germany', 'Hungary',
#                                                                           'Liechtenstein', 'Poland', 'Slovakia', 'Slovenia', 'Switzerland'))
#
# EU_polnocna.Wspolczynnik_Giniego<- Wspolczynnik_Giniego %>% filter(region %in% c('Finland', 'Sweden', 'Iceland', 'Norway',
#                                                                           'Denmark' ))
#
# EU_wschodnia.Wspolczynnik_Giniego<- Wspolczynnik_Giniego %>% filter(region %in% c('Belarus', 'Bulgaria', 'Estonia', 'Lithuania', 'Latvia', 'Moldova',
#                                                                            'Romania', 'Ukraine' ))
#
# EU_poludniowa.Wspolczynnik_Giniego <- Wspolczynnik_Giniego %>% filter(region %in% c('Albania', 'Andorra', 'Bosnia and Herzegovina', 'Croatia', 'Greece',
#                                                                             'Spain', 'North Macedonia', 'Malta', 'Monaco', 'Italy', 'Cyprus', 'Kosovo',
#                                                                             'Montenegro', 'Portugal', 'San Marino', 'Serbia', 'Turkey', 'Vatican'))
#
#
#
# EU_zachodnia.Smiertelnosc_niemowlat <- Smiertelnosc_niemowlat %>% filter(region %in% c('Belgium', 'Netherlands', 'Luxembourg',
#                                                                            'UK', 'Ireland', 'France'))
#
# EU_srodkowa.Smiertelnosc_niemowlat <- Smiertelnosc_niemowlat %>% filter(region %in% c('Austria', 'Czech Republic', 'Germany', 'Hungary',
#                                                                           'Liechtenstein', 'Poland', 'Slovakia', 'Slovenia', 'Switzerland'))
#
# EU_polnocna.Smiertelnosc_niemowlat <- Smiertelnosc_niemowlat %>% filter(region %in% c('Finland', 'Sweden', 'Iceland', 'Norway',
#                                                                           'Denmark' ))
#
# EU_wschodnia.Smiertelnosc_niemowlat <- Smiertelnosc_niemowlat %>% filter(region %in% c('Belarus', 'Bulgaria', 'Estonia', 'Lithuania', 'Latvia', 'Moldova',
#                                                                            'Romania', 'Ukraine' ))
#
# EU_poludniowa.Smiertelnosc_niemowlat <- Smiertelnosc_niemowlat %>% filter(region %in% c('Albania', 'Andorra', 'Bosnia and Herzegovina', 'Croatia', 'Greece',
#                                                                             'Spain', 'North Macedonia', 'Malta', 'Monaco', 'Italy', 'Cyprus', 'Kosovo',
#                                                                             'Montenegro', 'Portugal', 'San Marino', 'Serbia', 'Turkey', 'Vatican'))
#
#
# EU_zachodnia.Wskaznik_HDI <- Wskaznik_HDI %>% filter(region %in% c('Belgium', 'Netherlands', 'Luxembourg',
#                                                                            'UK', 'Ireland', 'France'))
#
# EU_srodkowa.Wskaznik_HDI <- Wskaznik_HDI %>% filter(region %in% c('Austria', 'Czech Republic', 'Germany', 'Hungary',
#                                                                           'Liechtenstein', 'Poland', 'Slovakia', 'Slovenia', 'Switzerland'))
#
# EU_polnocna.Wskaznik_HDI <- Wskaznik_HDI %>% filter(region %in% c('Finland', 'Sweden', 'Iceland', 'Norway',
#                                                                           'Denmark' ))
#
# EU_wschodnia.Wskaznik_HDI <- Wskaznik_HDI %>% filter(region %in% c('Belarus', 'Bulgaria', 'Estonia', 'Lithuania', 'Latvia', 'Moldova',
#                                                                            'Romania', 'Ukraine' ))
#
# EU_poludniowa.Wskaznik_HDI <- Wskaznik_HDI %>% filter(region %in% c('Albania', 'Andorra', 'Bosnia and Herzegovina', 'Croatia', 'Greece',
#                                                                             'Spain', 'North Macedonia', 'Malta', 'Monaco', 'Italy', 'Cyprus', 'Kosovo',
#                                                                             'Montenegro', 'Portugal', 'San Marino', 'Serbia', 'Turkey', 'Vatican'))
# datasets4<-PKB_na_mieszkanca
# datasets4_val <- datasets4[,c(2:ncol(datasets4))]
# ?top_n
# val <- datasets4$rok.2012
# reg <- datasets4$region
# df <- data.frame(reg,val)
# names(df) <- c("region","wartosc")
# top_20 <- top_n(df, 20, df$wartosc)
#
# top_20_ordered <-  top_20[order(top_20$wartosc, decreasing = T),]
# rownames(top_20_ordered) <- 1:nrow(top_20_ordered)
#
#
# col.colors.sp <- ifelse(top_20_ordered$region=='Poland', "gray", "red")
# str(top_20_ordered)
#
# top_20_ordered %>%
#   ggplot( aes(x=region, y=wartosc)) +
#   geom_line( color="grey") +
#   geom_point(shape=21, color="black", fill=col.colors.sp, size=8) +
#   scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
#   theme(axis.text.x = element_text(size = 15)) +
#   theme_bw() +
#   ggtitle("Scatterplot")
# datasets4<-PKB_na_mieszkanca
# datasets4_val <- datasets4[,c(2:ncol(datasets4))]
#
# val <- datasets4$rok.2012
# reg <- datasets4$region
# df <- data.frame(reg,val)
# names(df) <- c("region","wartosc")
#
# #
# library(plotly)
# library(sf)
# library(tidyverse)
# library(rnaturalearth)
# library(RColorBrewer)
# #
# world <- ne_countries(scale = "medium", returnclass = "sf")
# class(world)
# plot(world)
# # #
# europe <- world[world$region_un=="Europe"&world$name!="Russia",]
# # #
#
#
# # #
# europe$name_long <- gsub("United Kingdom", "UK", europe$name_long)
# europe$name_long <- gsub("Republic of Serbia", "Serbia", europe$name_long)
# europe$name_long <- gsub("Macedonia", "North Macedonia", europe$name_long)
#
# europe_df <- europe %>% left_join(df, by=c("name_long" ="region"))
# europe_df <- cbind(europe_df, st_coordinates(st_centroid(europe_df)))
#
# p <- ggplot() +
#   geom_sf(color="black",data=europe_df,aes(fill=wartosc), inherit.aes=F, alpha=0.9) +
#
#   labs(x="Longitude", y="Latitude") +
#   scale_fill_distiller(name = "Wartosc wskaznika", palette = "Greens") +
#   coord_map(xlim = c(-22, 40),  ylim = c(46, 60)) +
#   theme_bw()
#
# # Convert it into plotly
# ggplotly(p)
#================================= BIBLIOTEKI ===============================================================
#library(ggplot2)
library(openxlsx)
library(dplyr)
library(tidyverse)
#library(gridExtra)
#library(data.table)
#============================== IMPORT DANYCH I WSTEPNA OBROBKA ============================================
setwd("C:/Users/mateu/OneDrive/Pulpit/Projekt_inżynierski/")
Wskaznik_HDI <- read.xlsx("HDI_INDEX_PROJ.xlsx", sheet = 1, skipEmptyRows = FALSE)
PKB_na_mieszkanca <- read.xlsx("GDP_PER_CAPITA_PROJ.xlsx", sheet = 1, skipEmptyRows = FALSE)
Wspolczynnik_Giniego <- read.xlsx("GINI_INDEX_PROJ.xlsx", sheet = 1, skipEmptyRows = FALSE)
Smiertelnosc_niemowlat <- read.xlsx("INFANT_MORTALITY_RATE_PROJ.xlsx", sheet = 1, skipEmptyRows = FALSE)
Ogolne_szczescie <- read.xlsx("HAPPINESS_SCORE_PROJ.xlsx", sheet = 1, skipEmptyRows = FALSE)
# Dla danych "Ogolne_szczescie" jest oddzielny plik R, w kt?rym zosta? utworzony plik Excel - HAPPINESS_SCORE_PROJ.xlsx.
names(Wskaznik_HDI) <- c("region", "rok.2012","rok.2013",
"rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019")
names(PKB_na_mieszkanca) <- c("region", "rok.2010","rok.2011","rok.2012","rok.2013",
"rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019",
"rok.2020","rok.2021")
names(Wspolczynnik_Giniego) <- c("region","rok.2009", "rok.2010","rok.2011","rok.2012","rok.2013",
"rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019",
"rok.2020")
names(Smiertelnosc_niemowlat) <- c("region","rok.2009", "rok.2010","rok.2011","rok.2012","rok.2013",
"rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019")
PKB_na_mieszkanca <- select(PKB_na_mieszkanca,c("region","rok.2012","rok.2013","rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019","rok.2020","rok.2021"))
Wspolczynnik_Giniego <- select(Wspolczynnik_Giniego,c("region","rok.2012","rok.2013","rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019","rok.2020"))
Smiertelnosc_niemowlat <- select(Smiertelnosc_niemowlat,c("region","rok.2012","rok.2013","rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019"))
Wskaznik_HDI$region <- gsub("United Kingdom", "UK", Wskaznik_HDI$region)
PKB_na_mieszkanca$region <- gsub("United Kingdom", "UK", PKB_na_mieszkanca$region)
Wspolczynnik_Giniego$region <- gsub("United Kingdom", "UK", Wspolczynnik_Giniego$region)
Smiertelnosc_niemowlat$region <- gsub("United Kingdom", "UK", Smiertelnosc_niemowlat$region)
Ogolne_szczescie$region <- gsub("United Kingdom", "UK",Ogolne_szczescie$region)
PKB_na_mieszkanca$region <- gsub("Czechia", "Czech Republic", PKB_na_mieszkanca$region)
Wspolczynnik_Giniego$region <- gsub("Czechia", "Czech Republic", Wspolczynnik_Giniego$region)
Smiertelnosc_niemowlat$region <- gsub("Czechia", "Czech Republic", Smiertelnosc_niemowlat$region)
Ogolne_szczescie$region <- gsub("Macedonia", "North Macedonia",Ogolne_szczescie$region)
Wskaznik_HDI$region <- gsub("Bosnia Herzegovina", "Bosnia and Herzegovina", Wskaznik_HDI$region)
Wspolczynnik_Giniego <- Wspolczynnik_Giniego[-37, ]
#Usuwnie niew?asniwych panstw lub panstw z brakami danych
Wskaznik_HDI <- Wskaznik_HDI[-c(3,5,17,30,37), ]
rownames(Wskaznik_HDI) <- 1:nrow(Wskaznik_HDI)
Wskaznik_HDI[,2:9] <- round(Wskaznik_HDI[,2:9], 3)
Smiertelnosc_niemowlat <- Smiertelnosc_niemowlat[-c(38,40,42,43,44,46,47,48), ]
rownames(Smiertelnosc_niemowlat) <- 1:nrow(Smiertelnosc_niemowlat)
Ogolne_szczescie <- Ogolne_szczescie[-c(26,28),]
rownames(Ogolne_szczescie) <- 1:nrow(Ogolne_szczescie)
Ogolne_szczescie[,2:6] <- round(Ogolne_szczescie[,2:6], 3)    # zaokr?glanie wszystkich kolumn do 3 miejsc po przecinku
# Tworze dodatkowa ramke danych dla "Ogolne_szczescie" w celu usprawnienia dzialania wykresow w aplikacji
Ogolne_szczescie_2012_2019 <- Ogolne_szczescie %>%
add_column(
rok.2012 = "NA",   #dodawanie 0 kolumn
rok.2013 = "NA",
rok.2014 = "NA", .after="region")
Ogolne_szczescie_2012_2019.36 <- Ogolne_szczescie_2012_2019[-c(26,27,34,36),]
rownames(Ogolne_szczescie_2012_2019.36) <- 1:nrow(Ogolne_szczescie_2012_2019.36)
Smiertelnosc_niemowlat.36 <- Smiertelnosc_niemowlat[-c(29,34,38,39),]
rownames(Smiertelnosc_niemowlat.36) <- 1:nrow(Smiertelnosc_niemowlat.36)
Wskaznik_HDI.36 <- Wskaznik_HDI[-c(21,26,28,32),]
rownames(Wskaznik_HDI.36) <- 1:nrow(Wskaznik_HDI.36)
ws <- Wskaznik_HDI
ws <- na.omit(ws)
ws_val <- ws[,c(2:ncol(ws))]
reg <- ws$region
col <- ws$rok.2017
df <- data.frame(reg,col)
names(df) <- c("region", "wartość")
df_ordered<- df[order(df$wartość, decreasing = T),]
rownames(df_ordered) <- 1:nrow(df_ordered)
df_ordered <- df_ordered[1:20,]
colors.scatterplot <- ifelse(df_ordered$region=='Poland', "gray", "red")
bp <- barplot(height=df_ordered$wartość,space=0,names.arg = df_ordered$region,
col=colors.scatterplot, main = "Wykres słupkowy -",
horiz=T, las=1
)
text(0,bp, round(df_ordered$wartość, 3),cex=1.2,pos=4)
shiny::runApp('shiny_application')
top_20$region<- reorder(top_20$region, -top_20_val[,colm3])
runApp('shiny_application')
#================================= BIBLIOTEKI ===============================================================
#library(ggplot2)
library(openxlsx)
library(dplyr)
library(tidyverse)
#library(gridExtra)
#library(data.table)
#============================== IMPORT DANYCH I WSTEPNA OBRÓBKA ============================================
setwd("C:/Users/mateu/OneDrive/Pulpit/Projekt_inżynierski/")
Wskaznik_HDI <- read.xlsx("HDI_INDEX_PROJ.xlsx", sheet = 1, skipEmptyRows = FALSE)
PKB_na_mieszkanca <- read.xlsx("GDP_PER_CAPITA_PROJ.xlsx", sheet = 1, skipEmptyRows = FALSE)
Wspolczynnik_Giniego <- read.xlsx("GINI_INDEX_PROJ.xlsx", sheet = 1, skipEmptyRows = FALSE)
Smiertelnosc_niemowlat <- read.xlsx("INFANT_MORTALITY_RATE_PROJ.xlsx", sheet = 1, skipEmptyRows = FALSE)
Ogolne_szczescie <- read.xlsx("HAPPINESS_SCORE_PROJ.xlsx", sheet = 1, skipEmptyRows = FALSE)
# Dla danych "Ogolne_szczescie" jest oddzielny plik R, w którym został utworzony plik Excel - HAPPINESS_SCORE_PROJ.xlsx.
names(Wskaznik_HDI) <- c("region", "rok.2012","rok.2013",
"rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019")
names(PKB_na_mieszkanca) <- c("region", "rok.2010","rok.2011","rok.2012","rok.2013",
"rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019",
"rok.2020","rok.2021")
names(Wspolczynnik_Giniego) <- c("region","rok.2009", "rok.2010","rok.2011","rok.2012","rok.2013",
"rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019",
"rok.2020")
names(Smiertelnosc_niemowlat) <- c("region","rok.2009", "rok.2010","rok.2011","rok.2012","rok.2013",
"rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019")
PKB_na_mieszkanca <- select(PKB_na_mieszkanca,c("region","rok.2012","rok.2013","rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019","rok.2020","rok.2021"))
Wspolczynnik_Giniego <- select(Wspolczynnik_Giniego,c("region","rok.2012","rok.2013","rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019","rok.2020"))
Smiertelnosc_niemowlat <- select(Smiertelnosc_niemowlat,c("region","rok.2012","rok.2013","rok.2014","rok.2015","rok.2016","rok.2017","rok.2018","rok.2019"))
Wskaznik_HDI$region <- gsub("United Kingdom", "UK", Wskaznik_HDI$region)
PKB_na_mieszkanca$region <- gsub("United Kingdom", "UK", PKB_na_mieszkanca$region)
Wspolczynnik_Giniego$region <- gsub("United Kingdom", "UK", Wspolczynnik_Giniego$region)
Smiertelnosc_niemowlat$region <- gsub("United Kingdom", "UK", Smiertelnosc_niemowlat$region)
Ogolne_szczescie$region <- gsub("United Kingdom", "UK",Ogolne_szczescie$region)
PKB_na_mieszkanca$region <- gsub("Czechia", "Czech Republic", PKB_na_mieszkanca$region)
Wspolczynnik_Giniego$region <- gsub("Czechia", "Czech Republic", Wspolczynnik_Giniego$region)
Smiertelnosc_niemowlat$region <- gsub("Czechia", "Czech Republic", Smiertelnosc_niemowlat$region)
Ogolne_szczescie$region <- gsub("Macedonia", "North Macedonia",Ogolne_szczescie$region)
Wskaznik_HDI$region <- gsub("Bosnia Herzegovina", "Bosnia and Herzegovina", Wskaznik_HDI$region)
Wspolczynnik_Giniego <- Wspolczynnik_Giniego[-37, ]
#Usuwnie niewłaściwych państw lub państw z brakami danych
Wskaznik_HDI <- Wskaznik_HDI[-c(3,5,17,30,37), ]
rownames(Wskaznik_HDI) <- 1:nrow(Wskaznik_HDI)
Wskaznik_HDI[,2:9] <- round(Wskaznik_HDI[,2:9], 3)
Smiertelnosc_niemowlat <- Smiertelnosc_niemowlat[-c(38,40,42,43,44,46,47,48), ]
rownames(Smiertelnosc_niemowlat) <- 1:nrow(Smiertelnosc_niemowlat)
Ogolne_szczescie <- Ogolne_szczescie[-c(26,28),]
rownames(Ogolne_szczescie) <- 1:nrow(Ogolne_szczescie)
Ogolne_szczescie[,2:6] <- round(Ogolne_szczescie[,2:6], 3)    # zaokr?ąglanie wszystkich kolumn do 3 miejsc po przecinku
# Tworzymy dodatkową ramkę danych dla "Ogolne_szczescie" w celu usprawnienia działania wykresów w aplikacji
Ogolne_szczescie_2012_2019 <- Ogolne_szczescie %>%
add_column(
rok.2012 = "NA",   #dodawanie 0 kolumn
rok.2013 = "NA",
rok.2014 = "NA", .after="region")
Ogolne_szczescie_2012_2019.36 <- Ogolne_szczescie_2012_2019[-c(26,27,34,36),]
rownames(Ogolne_szczescie_2012_2019.36) <- 1:nrow(Ogolne_szczescie_2012_2019.36)
Smiertelnosc_niemowlat.36 <- Smiertelnosc_niemowlat[-c(29,34,38,39),]
rownames(Smiertelnosc_niemowlat.36) <- 1:nrow(Smiertelnosc_niemowlat.36)
Wskaznik_HDI.36 <- Wskaznik_HDI[-c(21,26,28,32),]
rownames(Wskaznik_HDI.36) <- 1:nrow(Wskaznik_HDI.36)
shiny::runApp('shiny_application')
runApp('shiny_application')
runApp('shiny_application')
runApp('shiny_application')
runApp('shiny_application')
